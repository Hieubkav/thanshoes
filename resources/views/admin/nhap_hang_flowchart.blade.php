<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flowchart Quy Tr√¨nh Nh·∫≠p H√†ng Trung Qu·ªëc</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .flowchart-container {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        .step-box {
            transition: all 0.3s ease;
        }
        .step-box:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.2);
        }
        .arrow {
            width: 0;
            height: 0;
            border-left: 15px solid transparent;
            border-right: 15px solid transparent;
            border-top: 20px solid #4F46E5;
            margin: 10px auto;
        }
        .decision-diamond {
            width: 120px;
            height: 120px;
            background: #F59E0B;
            transform: rotate(45deg);
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 20px auto;
            position: relative;
        }
        .decision-text {
            transform: rotate(-45deg);
            text-align: center;
            font-size: 12px;
            font-weight: bold;
            color: white;
            line-height: 1.2;
        }
    </style>
</head>
<body class="flowchart-container">
    <div class="container mx-auto px-4 py-8">
        <!-- Header -->
        <div class="text-center mb-8">
            <h1 class="text-4xl font-bold text-white mb-4">üîÑ Quy Tr√¨nh Nh·∫≠p H√†ng Trung Qu·ªëc</h1>
            <p class="text-white/80 text-lg">S∆° ƒë·ªì chi ti·∫øt t·ª´ng b∆∞·ªõc x·ª≠ l√Ω nh·∫≠p h√†ng</p>
            <div class="mt-4">
                <a href="/tq" class="inline-flex items-center px-6 py-3 bg-white/20 hover:bg-white/30 text-white rounded-lg transition-colors">
                    ‚Üê Quay l·∫°i trang nh·∫≠p h√†ng
                </a>
            </div>
        </div>

        <!-- Flowchart -->
        <div class="max-w-4xl mx-auto">
            <!-- Step 1: Start -->
            <div class="step-box bg-green-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üöÄ B·∫ÆT ƒê·∫¶U</h3>
                <p class="mt-2">Ng∆∞·ªùi d√πng submit form t·∫°i /tq</p>
                <div class="text-sm mt-2 opacity-80">AdminController::nhap_hang(Request $request)</div>
            </div>
            <div class="arrow"></div>

            <!-- Step 2: Set Time Limit -->
            <div class="step-box bg-indigo-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">‚è±Ô∏è THI·∫æT L·∫¨P TH·ªúI GIAN</h3>
                <p class="mt-2">set_time_limit(300) - TƒÉng th·ªùi gian th·ª±c thi l√™n 5 ph√∫t</p>
                <div class="text-sm mt-2 opacity-80">Tr√°nh timeout khi x·ª≠ l√Ω file l·ªõn</div>
            </div>
            <div class="arrow"></div>

            <!-- Step 3: Laravel Validation -->
            <div class="step-box bg-purple-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">‚úÖ LARAVEL VALIDATION</h3>
                <p class="mt-2">$request->validate()</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ 'excel_products' => 'required|file'<br>
                    ‚Ä¢ 'excel_low_stock' => 'required|file'<br>
                    ‚Ä¢ 'exchange_rate' => 'required|numeric'
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Step 4: File Extension Check -->
            <div class="step-box bg-orange-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üìã KI·ªÇM TRA PH·∫¶N M·ªû R·ªòNG</h3>
                <p class="mt-2">validateFileExtensions()</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ getClientOriginalExtension()<br>
                    ‚Ä¢ Ch·ªâ ch·∫•p nh·∫≠n .xlsx, .xls<br>
                    ‚Ä¢ Throw Exception n·∫øu sai ƒë·ªãnh d·∫°ng
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Decision: Validation OK? -->
            <div class="decision-diamond">
                <div class="decision-text">
                    File h·ª£p l·ªá?
                </div>
            </div>

            <div class="flex justify-between items-center mb-4">
                <div class="w-1/3 text-center">
                    <span class="text-red-400 font-bold">‚ùå KH√îNG</span>
                    <div class="step-box bg-red-500 text-white p-4 rounded-lg mt-2">
                        <h4 class="font-bold">üö´ THROW EXCEPTION</h4>
                        <p class="text-sm">Exception ‚Üí catch ‚Üí return error</p>
                    </div>
                </div>
                <div class="w-1/3 text-center">
                    <div class="arrow"></div>
                </div>
                <div class="w-1/3 text-center">
                    <span class="text-green-400 font-bold">‚úÖ C√ì</span>
                </div>
            </div>

            <!-- Step 5: Create Directory -->
            <div class="step-box bg-cyan-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üìÅ T·∫†O TH·ª¶ M·ª§C</h3>
                <p class="mt-2">saveUploadedFiles() - T·∫°o th∆∞ m·ª•c uploads</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ Ki·ªÉm tra file_exists(public_path('uploads'))<br>
                    ‚Ä¢ mkdir($directory, 0777, true) n·∫øu ch∆∞a c√≥<br>
                    ‚Ä¢ Throw Exception n·∫øu kh√¥ng t·∫°o ƒë∆∞·ª£c
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Step 6: Move Files -->
            <div class="step-box bg-indigo-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üíæ DI CHUY·ªÇN FILE</h3>
                <p class="mt-2">move() file v·ªõi t√™n c·ªë ƒë·ªãnh</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ excel_products ‚Üí data_shoes.xlsx<br>
                    ‚Ä¢ excel_low_stock ‚Üí cannhap.xls<br>
                    ‚Ä¢ L∆∞u v√†o public/uploads/
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Step 7: Read Excel Files -->
            <div class="step-box bg-teal-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üìñ ƒê·ªåC FILE EXCEL</h3>
                <p class="mt-2">readExcelFile() cho 2 file</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ IOFactory::load($filePath)<br>
                    ‚Ä¢ getActiveSheet()->toArray(null, true, true, true)<br>
                    ‚Ä¢ $productsData & $lowStockData
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Step 8: Loop Through Low Stock Data -->
            <div class="step-box bg-orange-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üîÑ DUY·ªÜT D·ªÆ LI·ªÜU S·∫ÆP H·∫æT</h3>
                <p class="mt-2">ProcessLowStockDataAction - V√≤ng l·∫∑p t·ª´ d√≤ng 6</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ for ($row = 6; isset($lowStockData[$row]); $row++)<br>
                    ‚Ä¢ L·∫•y SKU t·ª´ c·ªôt B: $lowStockData[$row]['B']<br>
                    ‚Ä¢ T√°ch SKU: explode('-', $sku) ‚Üí $baseSku & $size
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Step 9: Calculate Need To Order -->
            <div class="step-box bg-pink-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üßÆ T√çNH S·ªê L∆Ø·ª¢NG C·∫¶N NH·∫¨P</h3>
                <p class="mt-2">Logic t√≠nh to√°n ph·ª©c t·∫°p</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ N·∫øu c·ªôt I r·ªóng: needToOrder = needG - needH (+ 1 n·∫øu size ‚â† 36)<br>
                    ‚Ä¢ N·∫øu c·ªôt I c√≥ gi√° tr·ªã: needToOrder = (int)$needToOrderRaw<br>
                    ‚Ä¢ needG = c·ªôt G, needH = c·ªôt H
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Decision: Need To Order > 0? -->
            <div class="decision-diamond">
                <div class="decision-text">
                    needToOrder<br>> 0?
                </div>
            </div>

            <div class="flex justify-between items-center mb-4">
                <div class="w-1/3 text-center">
                    <span class="text-red-400 font-bold">‚ùå KH√îNG</span>
                    <div class="step-box bg-red-400 text-white p-4 rounded-lg mt-2">
                        <h4 class="font-bold">‚ûï TH√äM V√ÄO EXCLUDED</h4>
                        <p class="text-sm">addToExcludedProducts()<br>L√Ω do: "Kh√¥ng c·∫ßn nh·∫≠p th√™m"</p>
                    </div>
                </div>
                <div class="w-1/3 text-center">
                    <div class="arrow"></div>
                </div>
                <div class="w-1/3 text-center">
                    <span class="text-green-400 font-bold">‚úÖ C√ì</span>
                    <div class="step-box bg-green-400 text-white p-4 rounded-lg mt-2">
                        <h4 class="font-bold">‚ûï TH√äM V√ÄO VALID</h4>
                        <p class="text-sm">addToValidProducts()<br>T√≠ch l≈©y total_need</p>
                    </div>
                </div>
            </div>

            <!-- Step 10: Filter By Minimum Quantity -->
            <div class="step-box bg-red-400 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üîç L·ªåC THEO S·ªê L∆Ø·ª¢NG T·ªêI THI·ªÇU</h3>
                <p class="mt-2">filterProductsByMinimumQuantity()</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ Duy·ªát qua $groupedProducts<br>
                    ‚Ä¢ N·∫øu total_need < 6 ‚Üí chuy·ªÉn sang $excludedProducts<br>
                    ‚Ä¢ L√Ω do: "T·ªïng s·ªë l∆∞·ª£ng c·∫ßn nh·∫≠p ch·ªâ c√≥ X (c·∫ßn t·ªëi thi·ªÉu 6)"
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Step 11: Filter Products Data -->
            <div class="step-box bg-violet-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üéØ L·ªåC D·ªÆ LI·ªÜU S·∫¢N PH·∫®M</h3>
                <p class="mt-2">filterProductsData() - L·ªçc theo SKU h·ª£p l·ªá</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ $validBaseSkus = array_keys($groupedProducts)<br>
                    ‚Ä¢ Duy·ªát $productsData, ch·ªâ gi·ªØ SKU c√≥ trong $validBaseSkus<br>
                    ‚Ä¢ T√°ch SKU t·ª´ c·ªôt N: explode('-', $row['N'])[0]
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Step 12: Collect Product Names -->
            <div class="step-box bg-cyan-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üìù THU TH·∫¨P T√äN S·∫¢N PH·∫®M</h3>
                <p class="mt-2">OptimizeProductQuantityAction - getProductName()</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ Duy·ªát $filteredProductsData<br>
                    ‚Ä¢ T√¨m d√≤ng c√≥ SKU kh·ªõp v·ªõi $baseSku<br>
                    ‚Ä¢ L·∫•y t√™n t·ª´ c·ªôt O: $row['O'] ?? $baseSku
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Step 13: Collect Product Images -->
            <div class="step-box bg-emerald-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üñºÔ∏è THU TH·∫¨P H√åNH ·∫¢NH</h3>
                <p class="mt-2">collectProductImages() - L·∫•y link ·∫£nh</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ Duy·ªát $filteredProductsData t√¨m SKU kh·ªõp<br>
                    ‚Ä¢ Thu th·∫≠p t·ª´ c·ªôt P, Q, R, S, T<br>
                    ‚Ä¢ L·ªçc b·ªè link r·ªóng, tr·∫£ v·ªÅ m·∫£ng unique
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Decision: Need Optimization? -->
            <div class="decision-diamond">
                <div class="decision-text">
                    6 ‚â§ total_need<br>< 12?
                </div>
            </div>

            <div class="flex justify-between items-center mb-4">
                <div class="w-1/3 text-center">
                    <span class="text-blue-400 font-bold">‚ùå KH√îNG</span>
                    <div class="step-box bg-blue-400 text-white p-4 rounded-lg mt-2">
                        <h4 class="font-bold">üìä T√çNH STOCK AFTER ORDER</h4>
                        <p class="text-sm">calculateStockAfterOrder()<br>Kh√¥ng c·∫ßn t·ªëi ∆∞u</p>
                    </div>
                </div>
                <div class="w-1/3 text-center">
                    <div class="arrow"></div>
                </div>
                <div class="w-1/3 text-center">
                    <span class="text-green-400 font-bold">‚úÖ C√ì</span>
                </div>
            </div>

            <!-- Step 14: Optimization Process -->
            <div class="step-box bg-yellow-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">‚ö° QU√Å TR√åNH T·ªêI ∆ØU</h3>
                <p class="mt-2">optimizeProductQuantity() - Logic ph·ª©c t·∫°p</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ Ph√¢n bi·ªát gi√†y n·ªØ: isWomensShoe() (t√¨m "n·ªØ" trong t√™n)<br>
                    ‚Ä¢ Size ∆∞u ti√™n n·ªØ: [37,38], nam: [42,41,43]<br>
                    ‚Ä¢ additionalNeeded = 12 - total_need<br>
                    ‚Ä¢ Thu th·∫≠p d·ªØ li·ªáu t·ªìn kho cho size ∆∞u ti√™n
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Step 15: Check Can Optimize -->
            <div class="step-box bg-amber-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üîç KI·ªÇM TRA KH·∫¢ NƒÇNG T·ªêI ∆ØU</h3>
                <p class="mt-2">canOptimizeToTwelve() - T√≠nh to√°n chi ti·∫øt</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ V·ªõi m·ªói size ∆∞u ti√™n:<br>
                    ‚Ä¢ futureStock = currentStock + coming + currentOrder<br>
                    ‚Ä¢ canAdd = max(0, 6 - futureStock)<br>
                    ‚Ä¢ T·ªïng canAdd ‚â• additionalNeeded?
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Step 9: Generate Reports -->
            <div class="step-box bg-emerald-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üìä T·∫†O B√ÅO C√ÅO</h3>
                <p class="mt-2">GenerateExcelReportAction::run()</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ File b√°o c√°o ch√≠nh<br>
                    ‚Ä¢ Sheet Log (s·∫£n ph·∫©m b·ªã lo·∫°i)<br>
                    ‚Ä¢ Sheet File g·ª≠i kho TQ
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Step 10: Generate Sapo File -->
            <div class="step-box bg-violet-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üì¶ T·∫†O FILE SAPO</h3>
                <p class="mt-2">T·∫°o file nh·∫≠p h√†ng cho h·ªá th·ªëng Sapo</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ Template Excel<br>
                    ‚Ä¢ ƒêi·ªÅn SKU, t√™n, s·ªë l∆∞·ª£ng, gi√°<br>
                    ‚Ä¢ L∆∞u nhap_hang_sapo.xlsx
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Step 11: Update Low Stock File -->
            <div class="step-box bg-amber-500 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üîÑ C·∫¨P NH·∫¨T FILE</h3>
                <p class="mt-2">C·∫≠p nh·∫≠t file cannhap.xls</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ Ghi s·ªë l∆∞·ª£ng nh·∫≠p v√†o c·ªôt I<br>
                    ‚Ä¢ ƒê√°nh d·∫•u s·∫£n ph·∫©m ƒë√£ x·ª≠ l√Ω<br>
                    ‚Ä¢ L∆∞u file g·ªëc
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Step 12: Return Result -->
            <div class="step-box bg-green-600 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üì§ TR·∫¢ V·ªÄ K·∫æT QU·∫¢</h3>
                <p class="mt-2">T·∫°o th√¥ng b√°o th√†nh c√¥ng</p>
                <div class="text-sm mt-2 opacity-80">
                    ‚Ä¢ S·ªë s·∫£n ph·∫©m h·ª£p l·ªá<br>
                    ‚Ä¢ S·ªë s·∫£n ph·∫©m b·ªã lo·∫°i<br>
                    ‚Ä¢ T·ªïng s·ªë l∆∞·ª£ng nh·∫≠p<br>
                    ‚Ä¢ T√™n file b√°o c√°o
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Step 13: Controller Response -->
            <div class="step-box bg-blue-600 text-white p-6 rounded-lg text-center mb-4">
                <h3 class="text-xl font-bold">üîô CONTROLLER RESPONSE</h3>
                <p class="mt-2">AdminController x·ª≠ l√Ω k·∫øt qu·∫£</p>
                <div class="text-sm mt-2 opacity-80">
                    back()->with(['success' => $result, 'report_filename' => 'file.xlsx'])
                </div>
            </div>
            <div class="arrow"></div>

            <!-- Final Step: Display Result -->
            <div class="step-box bg-green-700 text-white p-6 rounded-lg text-center mb-8">
                <h3 class="text-xl font-bold">üéâ HI·ªÇN TH·ªä K·∫æT QU·∫¢</h3>
                <p class="mt-2">Ng∆∞·ªùi d√πng th·∫•y th√¥ng b√°o + n√∫t download</p>
                <div class="text-sm mt-2 opacity-80">
                    V·∫´n ·ªü trang /tq v·ªõi th√¥ng b√°o th√†nh c√¥ng
                </div>
            </div>

            <!-- Error Handling -->
            <div class="bg-red-500/20 border border-red-500 rounded-lg p-6 mt-8">
                <h3 class="text-xl font-bold text-red-300 mb-4">‚ö†Ô∏è X·ª¨ L√ù L·ªñI</h3>
                <div class="text-red-200 text-sm">
                    <p><strong>T·∫°i b·∫•t k·ª≥ b∆∞·ªõc n√†o:</strong></p>
                    <p>‚Ä¢ N·∫øu c√≥ Exception ‚Üí catch ‚Üí return "L·ªói khi x·ª≠ l√Ω: {message}"</p>
                    <p>‚Ä¢ Controller ki·ªÉm tra n·∫øu result b·∫Øt ƒë·∫ßu b·∫±ng "L·ªói" ‚Üí back()->with('error')</p>
                    <p>‚Ä¢ Ng∆∞·ªùi d√πng th·∫•y th√¥ng b√°o l·ªói m√†u ƒë·ªè</p>
                </div>
            </div>

            <!-- Key Functions Detail -->
            <div class="bg-white/10 rounded-lg p-6 mt-8">
                <h3 class="text-xl font-bold text-white mb-4">üîß C√ÅC H√ÄM QUAN TR·ªåNG</h3>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6 text-white text-sm">
                    <div>
                        <h4 class="font-bold text-green-400 mb-2">üìä ProcessLowStockDataAction</h4>
                        <ul class="space-y-1 opacity-80">
                            <li>‚Ä¢ addToValidProducts() - Th√™m s·∫£n ph·∫©m h·ª£p l·ªá</li>
                            <li>‚Ä¢ addToExcludedProducts() - Th√™m s·∫£n ph·∫©m b·ªã lo·∫°i</li>
                            <li>‚Ä¢ filterProductsByMinimumQuantity() - L·ªçc < 6 ƒë√¥i</li>
                        </ul>
                    </div>
                    <div>
                        <h4 class="font-bold text-blue-400 mb-2">‚ö° OptimizeProductQuantityAction</h4>
                        <ul class="space-y-1 opacity-80">
                            <li>‚Ä¢ getProductName() - L·∫•y t√™n t·ª´ c·ªôt O</li>
                            <li>‚Ä¢ collectProductImages() - Thu th·∫≠p t·ª´ P,Q,R,S,T</li>
                            <li>‚Ä¢ isWomensShoe() - Ph√¢n bi·ªát gi√†y n·ªØ</li>
                            <li>‚Ä¢ canOptimizeToTwelve() - Ki·ªÉm tra kh·∫£ nƒÉng t·ªëi ∆∞u</li>
                            <li>‚Ä¢ performOptimization() - Th·ª±c hi·ªán t·ªëi ∆∞u</li>
                        </ul>
                    </div>
                    <div>
                        <h4 class="font-bold text-purple-400 mb-2">üìã GenerateExcelReportAction</h4>
                        <ul class="space-y-1 opacity-80">
                            <li>‚Ä¢ generateMainResultFile() - File b√°o c√°o ch√≠nh</li>
                            <li>‚Ä¢ generateDetailedReport() - B√°o c√°o chi ti·∫øt</li>
                            <li>‚Ä¢ createLogSheet() - Sheet Log s·∫£n ph·∫©m b·ªã lo·∫°i</li>
                            <li>‚Ä¢ generateWarehouseFile() - File g·ª≠i kho TQ</li>
                        </ul>
                    </div>
                    <div>
                        <h4 class="font-bold text-yellow-400 mb-2">üîÑ ProcessChinaImportAction</h4>
                        <ul class="space-y-1 opacity-80">
                            <li>‚Ä¢ validateFileExtensions() - Ki·ªÉm tra .xlsx/.xls</li>
                            <li>‚Ä¢ saveUploadedFiles() - L∆∞u file v·ªõi t√™n c·ªë ƒë·ªãnh</li>
                            <li>‚Ä¢ readExcelFile() - ƒê·ªçc Excel th√†nh array</li>
                            <li>‚Ä¢ filterProductsData() - L·ªçc theo SKU h·ª£p l·ªá</li>
                            <li>‚Ä¢ generateSapoFile() - T·∫°o file nh·∫≠p Sapo</li>
                            <li>‚Ä¢ updateLowStockFile() - C·∫≠p nh·∫≠t file g·ªëc</li>
                        </ul>
                    </div>
                </div>
            </div>

            <!-- Statistics -->
            <div class="bg-white/10 rounded-lg p-6 mt-8">
                <h3 class="text-xl font-bold text-white mb-4">üìà TH·ªêNG K√ä QUY TR√åNH CHI TI·∫æT</h3>
                <div class="grid grid-cols-1 md:grid-cols-4 gap-4 text-white">
                    <div class="text-center">
                        <div class="text-3xl font-bold text-green-400">4</div>
                        <div class="text-sm">Actions ch√≠nh</div>
                    </div>
                    <div class="text-center">
                        <div class="text-3xl font-bold text-blue-400">25+</div>
                        <div class="text-sm">B∆∞·ªõc logic chi ti·∫øt</div>
                    </div>
                    <div class="text-center">
                        <div class="text-3xl font-bold text-purple-400">5</div>
                        <div class="text-sm">File output ƒë∆∞·ª£c t·∫°o</div>
                    </div>
                    <div class="text-center">
                        <div class="text-3xl font-bold text-yellow-400">20+</div>
                        <div class="text-sm">H√†m helper</div>
                    </div>
                </div>
            </div>

            <!-- Data Flow -->
            <div class="bg-white/10 rounded-lg p-6 mt-8">
                <h3 class="text-xl font-bold text-white mb-4">üîÑ LU·ªíNG D·ªÆ LI·ªÜU</h3>
                <div class="text-white text-sm space-y-3">
                    <div class="flex items-center space-x-3">
                        <span class="w-4 h-4 bg-green-500 rounded-full"></span>
                        <span><strong>Input:</strong> 2 file Excel + t·ª∑ gi√° ‚Üí Validation ‚Üí L∆∞u file</span>
                    </div>
                    <div class="flex items-center space-x-3">
                        <span class="w-4 h-4 bg-blue-500 rounded-full"></span>
                        <span><strong>Processing:</strong> ƒê·ªçc Excel ‚Üí Ph√¢n t√≠ch ‚Üí T·ªëi ∆∞u ‚Üí T√≠nh to√°n</span>
                    </div>
                    <div class="flex items-center space-x-3">
                        <span class="w-4 h-4 bg-purple-500 rounded-full"></span>
                        <span><strong>Output:</strong> 3 sheet Excel + file Sapo + c·∫≠p nh·∫≠t file g·ªëc</span>
                    </div>
                    <div class="flex items-center space-x-3">
                        <span class="w-4 h-4 bg-yellow-500 rounded-full"></span>
                        <span><strong>Response:</strong> Th√¥ng b√°o k·∫øt qu·∫£ + n√∫t download</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
